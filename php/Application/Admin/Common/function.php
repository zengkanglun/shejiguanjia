<?php/** * 得到新的学生学号 * @return  string */function getStudentID($user_id){    /* 选择一个随机的方案 */    mt_srand((double) microtime() * 1000000);    return str_pad(mt_rand(1, 99999), 5, '0', STR_PAD_LEFT).$user_id.rand(10,99);}/** * 递归重组节点信息为多维数组 * @param [type] $node  [要处理的节点数组] * @param integer $pid  [父级id] * @param [type]  */function node_merge($node,$access = null, $pid =0){    $arr = array();    foreach($node as $val){        if(is_array($access)){            $val['access'] = in_array($val['id'], $access) ? 1 : 0;        }        if($val['pid'] == $pid){            $val['child'] = node_merge($node, $access, $val['id']);            $arr[] = $val;        }    }    return $arr;}// 菜单组合一维数组function cateForLevel($menu,$html= '----', $parent_id=0, $level = 0, $current_id = ''){    $arr = array();    foreach($menu as $val){        if($val['parent_id'] == $parent_id && $val['cat_id'] != $current_id){            $val['level'] = $level + 1;            $val['html'] = str_repeat($html, $level);            $arr[] = $val;            $arr = array_merge($arr,cateForLevel($menu, $html, $val['cat_id'], $level+1, $current_id));        }    }    return $arr;}// 写入配置文件function toConf($name, $value='', $path=CONF_PATH) {    static $_cache = array();    $filename = $path . $name . '.php';    if ('' !== $value) {        if (is_null($value)) {            // 删除缓存            return unlink($filename);        } else {            // 缓存数据            $dir = dirname($filename);            // 目录不存在则创建            if (!is_dir($dir)) mkdir($dir);            $_cache[$name] = $value;            return file_put_contents($filename, strip_whitespace("<?php\nreturn " . var_export($_cache, true) . ";\n?>"));        }    }    if (isset($_cache[$name]))        return $_cache[$name];    // 获取缓存数据    if (is_file($filename)) {        $value = include $filename;        $_cache[$name] = $value;    } else {        $value = false;    }    return $value;}/** * +---------------------------------------------------------- * 判断别名是否规范 * +---------------------------------------------------------- */function is_unique_id($unique) {    if (preg_match("/^[a-zA-Z0-9-]+$/", $unique)) {        return true;    }}/** * +---------------------------------------------------------- * 判断用户名是否规范 * +---------------------------------------------------------- */function is_username($username) {    if (preg_match("/^[a-zA-Z]{1}([0-9a-zA-Z]|[._]){3,19}$/", $username)) {        return true;    }}/** * 判断密码是否规范 */function is_password($password) {    if (preg_match("/^[\@A-Za-z0-9\!\#\$\%\^\&\*\.\~]{6,22}$/", $password)) {        return true;    }}/* * 成功状态值 */function state_success(){    return 1;}/* * 失败状态值 */function state_fail(){    return 0;}/* * 失败状态值 */function state_none(){    return 2;}/* * 根据头像img字段内容组装各种尺寸的路径 * */function combinUserImgPath($img , $type,$name=''){    $path = C("img_save.save_path");    $res = array();    if($name!=''){        //单尺寸取出        if(empty($img)){            $res=$type=="app_user_head_img"?'/Uploads/default/app_user_head_img/b.png':'';        }else{            $res=substr($path[$type][$name],1).$img;        }        return $res;    }    foreach ($path[$type] as $k => $v)    {        if(empty($img))        {            $res[$k] = '/Uploads/default/app_user_head_img/b.png';        }        else        {            $res[$k] = substr($v,1).$img;        }    }    return $res;}/** * 得到新订单号 * @return  string */function getOrderSn(){    /* 选择一个随机的方案 */    mt_srand((double) microtime() * 1000000);    return date('Ymd') . str_pad(mt_rand(1, 99999), 5, '0', STR_PAD_LEFT);}/** * 转换上传文件数组变量为正确的方式 * @access private * @param array $files  上传的文件变量 * @return array */function dealFiles($files){    $fileArray = array();    foreach ($files as $key => $file)    {        foreach($file as $fK=>$fV)        {            $fileArray[$fK][$key] = $fV;        }    }    return $fileArray;}/* * 字符串截取，支持中文和其他编码 * static * access public * @param string $str 需要转换的字符串 * @param string $start 开始位置 * @param string $length 截取长度 * @param string $charset 编码格式 * @param string $suffix 截断显示字符 * return string */function msubstr($str, $start=0, $length, $charset="utf-8", $suffix=true) {    if(function_exists("mb_substr")){        $slice = mb_substr($str, $start, $length, $charset);        $strlen = mb_strlen($str,$charset);    }elseif(function_exists('iconv_substr')){        $slice = iconv_substr($str,$start,$length,$charset);        $strlen = iconv_strlen($str,$charset);    }else{        $re['utf-8']   = "/[\x01-\x7f]|[\xc2-\xdf][\x80-\xbf]|[\xe0-\xef][\x80-\xbf]{2}|[\xf0-\xff][\x80-\xbf]{3}/";        $re['gb2312'] = "/[\x01-\x7f]|[\xb0-\xf7][\xa0-\xfe]/";        $re['gbk']    = "/[\x01-\x7f]|[\x81-\xfe][\x40-\xfe]/";        $re['big5']   = "/[\x01-\x7f]|[\x81-\xfe]([\x40-\x7e]|\xa1-\xfe])/";        preg_match_all($re[$charset], $str, $match);        $slice = join("",array_slice($match[0], $start, $length));        $strlen = count($match[0]);    }    if($suffix && $strlen>$length)$slice.='...';    return $slice;}function getUserRoleName($uid = 0){    if (!$uid) {        exit('参数错误,程序结束');    }    $role = '';    $model = M('user');    $role_list = $model->where(['id' => $uid])->field(['role_2', 'role_3', 'role_4', 'role_5'])->find();    if (!is_array($role_list)) {        exit('用户不存在,程序结束');    }    if ($role_list['role_2']) {        $role .= ' 老师';    }    if ($role_list['role_3']) {        $role .= ' 义工';    }    if ($role_list['role_4']) {        $role .= ' 班主任';    }    if ($role_list['role_5']) {        $role .= ' 组长';    }    if (!in_array(1, $role_list)) {        $role .= '普通成员';    }    return $role;}/* * 下载微信服务器的图片 * media_id    微信的媒体id * type        保存图片类型 * */function getWxImg($mediaId,$type ,$path){    if(!class_exists('\JSSDK') && !class_exists('\WxPayConfig'))    {        vendor('wxsdkapi.jssdk');        vendor('wxpayapi.lib.WxPay#Config');    }    $res = new \JSSDK(\WxPayConfig::APPID,\WxPayConfig::APPSECRET);    $accessToken = $res->getAccessToken();//    $mediaId = 'cVqPIhDPPThUtayzS27GK6RN4-dseA6AZnTJxcg7_VaeuAaKcL53X32hmKxhgiSD';//    $accessToken = 'KHaopJY444kJ06LcH9ESj-73pkEfFTgIr3L45RURuUxv1KTjgXyFepJ-cTIF_oUyAKyYb5dK2r9L_wC-WDw2USqGQBMobC6DzPImuhPqxB8jxZ41CuLDtJiaEZk8Vf5kWSSjAAAAWW';    $picUrl = "http://file.api.weixin.qq.com/cgi-bin/media/get?access_token=$accessToken&media_id=$mediaId";    $ch = curl_init($picUrl);    curl_setopt($ch, CURLOPT_HEADER, 0);    curl_setopt($ch, CURLOPT_NOBODY, 0);    //对body进行输出。    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);    $package = curl_exec($ch);    $httpInfo = curl_getinfo($ch);    curl_close($ch);    $media = array_merge(array('mediaBody' => $package), $httpInfo);    //求出文件格式    preg_match('/\w\/(\w+)/i', $media["content_type"], $extmatches);    $fileExt = $extmatches[1];    $saveName = md5(microtime(true)).".{$fileExt}";    $img = array('imgMedia'=>$media,'saveName'=>$saveName);    return $img;}?>